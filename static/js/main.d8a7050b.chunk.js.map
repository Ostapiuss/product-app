{"version":3,"sources":["firebase.js","components/ModalEdit/ModalEdit.jsx","components/ModalDelete/ModalDelete.jsx","components/ModalComments/ModalCommetns.jsx","components/ProductList/ProductList.jsx","components/NewProduct/NewProduct.jsx","components/HomePage/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ModalEdit","React","memo","isOpen","product","edit","setOpenModal","useState","updateProduct","setUpdateProduct","inputHandler","event","target","value","name","useEffect","Dialog","className","open","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","type","onChange","fullWidth","imageUrl","description","count","color","width","height","DialogActions","Button","onClick","variant","ModalDelete","deleteProduct","setOpenDeleteModal","isDelete","setDelet","RadioGroup","FormControlLabel","control","Radio","ModalComments","setOpenComments","comments","onAddComment","productId","isAddComment","isSetAddComment","newComment","setNewComment","visibleComments","setVisibleComments","map","comment","date","ProductList","products","onEdit","onDelete","commentFilter","onSort","isOpenModal","currentProduct","setCurrentProduct","isOpenDeleteModal","isOpenComments","setProduct","Box","mt","ml","to","classNames","display","flexDirection","mr","style","toUpperCase","alt","src","justifyContent","backgroundColor","NewProduct","onAddProduct","newProduct","setNewProduct","isError","setError","onSubmit","preventDefault","currentURL","isValidURL","test","isValidProductLink","htmlFor","placeholder","required","error","HomePage","Paper","Container","fixed","App","setProducts","commentsOfProduct","setComments","ref","firestore","collection","onSnapshot","querrySnapchot","newComments","forEach","push","data","querySnapchot","items","doc","console","log","AppBar","position","Toolbar","Typography","path","exact","set","delete","filter","add","sort","prevElement","nextElement","localeCompare","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mZAcAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,gBACnBC,MAAO,+CAIMR,QAAf,E,6FCPaS,EAAYC,IAAMC,MAC7B,YAKO,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,KACAC,EACI,EADJA,aACI,EACsCC,mBAAS,eAAKH,IADpD,mBACGI,EADH,KACkBC,EADlB,KAGEC,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,MAAOC,EADe,EACfA,KAEfL,EAAiB,2BAAKD,GAAN,kBAAsBM,EAAOD,MAO/C,OAJAE,qBAAU,WACRN,EAAiBL,KAChB,CAACA,IAGF,eAACY,EAAA,EAAD,CACEC,UAAU,qBACVC,KAAMf,EAFR,UAIE,cAACgB,EAAA,EAAD,CAAaC,GAAG,oBAAhB,0BACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,aACHK,MAAM,OACNC,KAAK,OACLZ,KAAK,OACLD,MAAOL,EAAcM,KACrBa,SAAUjB,EACVkB,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,cACHK,MAAM,YACNC,KAAK,OACLZ,KAAK,WACLD,MAAOL,EAAcqB,SACrBF,SAAUjB,EACVkB,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,oBACHN,KAAK,cACLW,MAAM,cACNZ,MAAOL,EAAcsB,YACrBH,SAAUjB,EACVgB,KAAK,OACLE,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,cACHK,MAAM,oBACNX,KAAK,QACLD,MAAOL,EAAcuB,MACrBJ,SAAUjB,EACVgB,KAAK,OACLE,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,cACHN,KAAK,QACLW,MAAM,QACNZ,MAAOL,EAAcwB,MACrBL,SAAUjB,EACVgB,KAAK,OACLE,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,cACHN,KAAK,QACLW,MAAM,QACNZ,MAAOL,EAAcyB,MACrBN,SAAUjB,EACVgB,KAAK,OACLE,WAAS,IAEX,cAACN,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,eACHN,KAAK,SACLW,MAAM,SACNZ,MAAOL,EAAc0B,OACrBP,SAAUjB,EACVgB,KAAK,OACLE,WAAS,OAGb,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEJ,MAAM,UACNK,QAAS,WACP5B,EAAiBD,GACjBH,EAAKG,GACLF,GAAa,IALjB,kBAUA,cAAC8B,EAAA,EAAD,CACEJ,MAAM,YACNK,QAAS,WACP5B,EAAiBL,IAHrB,kBASA,cAACgC,EAAA,EAAD,CACEE,QAAQ,YACRN,MAAM,YACNN,KAAK,SACLW,QAAS,WACP/B,GAAa,IALjB,wB,2BC9HGiC,EAActC,IAAMC,MAC/B,YAEO,IADLC,EACI,EADJA,OAAQqC,EACJ,EADIA,cAAeC,EACnB,EADmBA,mBAAoBrC,EACvC,EADuCA,QACvC,EACyBG,oBAAS,GADlC,mBACGmC,EADH,KACaC,EADb,KAGJ,OACE,eAAC3B,EAAA,EAAD,CACEC,UAAU,kBACVC,KAAMf,EAFR,UAIE,cAACgB,EAAA,EAAD,CAAaC,GAAG,oBAAhB,qDAGA,cAACC,EAAA,EAAD,UACE,eAACuB,EAAA,EAAD,CACE9B,KAAK,aADP,UAGE,cAAC+B,EAAA,EAAD,CACEhC,MAAM,OACNiC,QAAS,cAACC,EAAA,EAAD,IACTV,QAAS,WACPM,GAAS,IAEXlB,MAAM,QAER,cAACoB,EAAA,EAAD,CACEhC,MAAM,QACNiC,QAAS,cAACC,EAAA,EAAD,IACTtB,MAAM,KACNY,QAAS,WACPM,GAAS,WAKjB,eAACR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEJ,MAAM,UACNN,KAAK,SACLW,QAAS,WACHK,GACFF,EAAcpC,GACdqC,GAAmB,IAEnBA,GAAmB,IARzB,oBAcA,cAACL,EAAA,EAAD,CACEJ,MAAM,YACNK,QAAS,WACPI,GAAmB,IAHvB,wBCjDGO,G,OAAgB/C,IAAMC,MACjC,YAEO,IADLC,EACI,EADJA,OAAQ8C,EACJ,EADIA,gBAAiBC,EACrB,EADqBA,SAAUC,EAC/B,EAD+BA,aAAcC,EAC7C,EAD6CA,UAC7C,EACoC7C,oBAAS,GAD7C,mBACG8C,EADH,KACiBC,EADjB,OAGgC/C,mBAAS,CAAEuB,YAAa,GAAIsB,cAH5D,mBAGGG,EAHH,KAGeC,EAHf,OAI0CjD,mBAAS2C,GAJnD,mBAIGO,EAJH,KAIoBC,EAJpB,KAgBJ,OAJA3C,qBAAU,WACR2C,EAAmBR,MAInB,eAAClC,EAAA,EAAD,CACEC,UAAU,oBACVC,KAAMf,EAFR,UAIE,cAACgB,EAAA,EAAD,CACEC,GAAG,mBADL,8BAMA,cAACC,EAAA,EAAD,UACE,6BACGoC,EAAgBE,KAAI,SAACC,GAAD,OACnB,oBAAI3C,UAAU,WAAd,SACE,sCAAO2C,EAAQ9B,YAAf,cAAgC8B,EAAQC,iBAOhD,eAAC1B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEJ,MAAM,UACNK,QAAS,WACPiB,GAAgB,IAHpB,0BAQA,cAAClB,EAAA,EAAD,CACEV,KAAK,SACLW,QAAS,WACPY,GAAgB,IAHpB,eAQA,eAACjC,EAAA,EAAD,CACEC,UAAU,mBACVC,KAAMmC,EAFR,UAIE,cAAClC,EAAA,EAAD,8BACA,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,aACHK,MAAM,cACNC,KAAK,OACLZ,KAAK,cACLD,MAAO0C,EAAWzB,YAClBH,SA/DgB,SAAChB,GAAW,IAAD,EACbA,EAAMC,OAAtBC,EAD6B,EAC7BA,MAAOC,EADsB,EACtBA,KAEf0C,EAAc,2BAAKD,GAAN,kBAAmBzC,EAAOD,MA6D7Be,WAAS,MAIb,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEV,KAAK,SACLW,QAAS,WACPc,EAAaI,GACbD,GAAgB,IAJpB,iBASA,cAAClB,EAAA,EAAD,CACEJ,MAAM,YACNK,QAAS,WACPiB,GAAgB,IAHpB,+BCpFDQ,EAAc7D,IAAMC,MAC/B,YAEO,IADL6D,EACI,EADJA,SAAUC,EACN,EADMA,OAAQC,EACd,EADcA,SAAUf,EACxB,EADwBA,SAAUgB,EAClC,EADkCA,cAAef,EACjD,EADiDA,aAAcgB,EAC/D,EAD+DA,OAC/D,EACgC5D,oBAAS,GADzC,mBACG6D,EADH,KACgB9D,EADhB,OAEwCC,mBAAS,IAFjD,mBAEG8D,EAFH,KAEmBC,EAFnB,OAG4C/D,oBAAS,GAHrD,mBAGGgE,EAHH,KAGsB9B,EAHtB,OAIsClC,oBAAS,GAJ/C,mBAIGiE,EAJH,KAImBvB,EAJnB,KAMEwB,EAAa,SAACrE,GAClBkE,EAAkBlE,IAGpB,OACE,qCACE,eAACsE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,UACE,cAACxC,EAAA,EAAD,CAAQE,QAAQ,YAAYN,MAAM,YAAlC,SACE,cAAC,IAAD,CACE6C,GAAG,eACH5D,UAAU,sBAFZ,+BAQF,cAACmB,EAAA,EAAD,CACEE,QAAQ,YACRN,MAAM,UACN8C,WAAW,uBACXzC,QAAS,WACP8B,KALJ,6BAYF,cAACO,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGG,QAAQ,OAAOC,cAAc,SAAhD,SACE,oBAAI/D,UAAU,eAAd,SACG8C,EAASJ,KAAI,SAACvD,GAAD,OACZ,cAACsE,EAAA,EAAD,CAAsBO,GAAI,EAA1B,SACE,qBACEhE,UAAU,gCACViE,MAAO,CAAEjD,MAAO,SAFlB,UAIE,oBACEhB,UAAU,iBADZ,SAGGb,EAAQU,KAAKqE,gBAGhB,8BACE,qBACElE,UAAU,iBACVmE,IAAI,YACJC,IAAKjF,EAAQyB,SACbqD,MAAO,CAAEhD,OAAQ,aAIrB,eAACwC,EAAA,EAAD,CAAKK,QAAQ,OAAOO,eAAe,gBAAnC,UACE,cAAClD,EAAA,EAAD,CACEE,QAAQ,YACRZ,KAAK,SACLM,MAAM,UACNK,QAAS,WACPoC,EAAWrE,GACXE,GAAa,IANjB,kBAYA,cAAC8B,EAAA,EAAD,CACEE,QAAQ,YACRZ,KAAK,SACLwD,MAAO,CAAEK,gBAAiB,UAAWvD,MAAO,SAC5CK,QAAS,WACPoC,EAAWrE,GACXqC,GAAmB,IANvB,uBAaF,mBAAGxB,UAAU,uBAAb,SAAqCb,EAAQ0B,cAE7C,6CACa1B,EAAQ2B,SAGrB,6CACa3B,EAAQ4B,SAGrB,4CACY5B,EAAQ6B,MADpB,cAC+B7B,EAAQ8B,UAGvC,cAACE,EAAA,EAAD,CACEE,QAAQ,YACRZ,KAAK,SACLM,MAAM,UACNkD,MAAO,CAAElD,MAAO,QAASC,MAAO,QAChCI,QAAS,WACP6B,EAAc9D,EAAQgB,IACtB6B,GAAgB,IAPpB,sBAaA,cAAC,EAAD,CACE7C,QAASiE,EACTlE,OAAQiE,EACR9D,aAAcA,EACdD,KAAM2D,IAER,cAACzB,EAAD,CACEpC,OAAQoE,EACR/B,cAAeyB,EACfxB,mBAAoBA,EACpBrC,QAASiE,IAEX,cAAC,EAAD,CACElE,OAAQqE,EACRvB,gBAAiBA,EACjBC,SAAUA,EACVC,aAAcA,EACdC,UAAWhD,EAAQgB,SA1FfhB,EAAQgB,iB,iBC5CnBoE,G,cAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACVlF,mBAAS,IADC,mBACvCmF,EADuC,KAC3BC,EAD2B,OAElBpF,oBAAS,GAFS,mBAEvCqF,EAFuC,KAE9BC,EAF8B,KAcxCnF,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,MAAOC,EADe,EACfA,KAEf6E,EAAc,2BAAKD,GAAN,kBAAmB5E,EAAOD,MAuBzC,OACE,qBAAKI,UAAU,cAAf,SACE,uBACE6E,SAvBmB,SAACnF,GACxBA,EAAMoF,kBAhBmB,SAACC,GAE1B,IAAMC,EAAa,qKAEnB,GAAIA,EAAWC,KAAKF,GAClB,OAAOC,EAYLE,CAAmBT,EAAW7D,UAchCgE,GAAS,IAbTA,GAAS,GACTJ,EAAaC,GACbC,EAAc,CACZvE,GAAI,GACJN,KAAM,GACNe,SAAU,GACVC,YAAa,GACbC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,OAAQ,OAWRjB,UAAU,yBAFZ,UAIE,uBAAOmF,QAAQ,aAAf,SACE,uBACEhF,GAAG,aACHH,UAAU,aACVH,KAAK,KACLY,KAAK,SACL2E,YAAY,KACZxF,MAAO6E,EAAWtE,GAClBO,SAAUjB,EACV4F,UAAQ,MAGZ,uBAAOF,QAAQ,eAAf,SACE,uBACEhF,GAAG,eACHH,UAAU,aACVH,KAAK,OACLY,KAAK,OACL2E,YAAY,OACZxF,MAAO6E,EAAW5E,KAClBa,SAAUjB,EACV4F,UAAQ,MAGZ,wBAAOF,QAAQ,cAAf,UACGR,GACD,mBAAGV,MAAO,CAAElD,MAAO,OAAnB,4BAEA,uBACEZ,GAAG,cACHH,UAAW6D,IAAW,aAAc,CAAEyB,MAAOX,IAC7C9E,KAAK,WACLY,KAAK,OACL2E,YAAY,YACZxF,MAAO6E,EAAW7D,SAClBF,SAAUjB,EACV4F,UAAQ,OAGZ,uBAAOF,QAAQ,sBAAf,SACE,0BACEhF,GAAG,sBACHH,UAAU,aACVH,KAAK,cACLY,KAAK,OACL2E,YAAY,cACZxF,MAAO6E,EAAW5D,YAClBH,SAAUjB,EACV4F,UAAQ,MAGZ,uBAAOF,QAAQ,gBAAf,SACE,uBACEhF,GAAG,gBACHH,UAAU,aACVH,KAAK,QACLY,KAAK,SACL2E,YAAY,mBACZxF,MAAO6E,EAAW3D,MAClBJ,SAAUjB,EACV4F,UAAQ,MAGZ,uBAAOF,QAAQ,gBAAf,SACE,uBACEhF,GAAG,gBACHH,UAAU,aACVH,KAAK,QACLY,KAAK,OACL2E,YAAY,QACZxF,MAAO6E,EAAW1D,MAClBL,SAAUjB,EACV4F,UAAQ,MAGZ,uBAAOF,QAAQ,gBAAf,SACE,uBACEhF,GAAG,gBACHH,UAAU,aACVH,KAAK,QACLY,KAAK,SACL2E,YAAY,QACZxF,MAAO6E,EAAWzD,MAClBN,SAAUjB,EACV4F,UAAQ,MAGZ,uBAAOF,QAAQ,iBAAf,SACE,uBACEhF,GAAG,iBACHH,UAAU,aACVH,KAAK,SACLY,KAAK,SACL2E,YAAY,SACZxF,MAAO6E,EAAWxD,OAClBP,SAAUjB,EACV4F,UAAQ,MAIZ,cAAClE,EAAA,EAAD,CACEE,QAAQ,YACRN,MAAM,UACNN,KAAK,SAHP,oC,kBCrJK8E,EAAW,kBACtB,kCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACjC,EAAA,EAAD,CAAKzD,UAAU,qBAAqB0D,GAAI,GAAxC,gCCSKiC,G,cAAM,WAAO,IAAD,EACSrG,mBAAS,IADlB,mBAChBwD,EADgB,KACN8C,EADM,OAEkBtG,mBAAS,IAF3B,mBAEhBuG,EAFgB,KAEGC,EAFH,OAGuBxG,mBAAS,IAHhC,mBAGhBkD,EAHgB,KAGCC,EAHD,KAKjBsD,EAAMzH,EAAS0H,YAAYC,WAAW,YACtChE,EAAW3D,EAAS0H,YAAYC,WAAW,YAiEjD,OAPAnG,qBAAU,WAnDRmC,EAASiE,YAAW,SAACC,GACnB,IAAMC,EAAc,GAEpBD,EAAeE,SAAQ,SAAC1D,GACtByD,EAAYE,KAAK3D,EAAQ4D,WAG3BT,EAAYM,MAUdL,EAAIG,YAAW,SAACM,GACd,IAAMC,EAAQ,GAEdD,EAAcH,SAAQ,SAACK,GACrBD,EAAMH,KAAKI,EAAIH,WAGjBX,EAAYa,QA8Bb,IAEHE,QAAQC,IAAI9D,GAGV,qCACE,cAAC+D,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,cAACrB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SAEE,eAACqB,EAAA,EAAD,CAAS/G,UAAU,SAAnB,UACE,cAACgH,EAAA,EAAD,CAAYhH,UAAU,qBAAtB,yBAIA,eAACyD,EAAA,EAAD,CACEzD,UAAU,gCACV8D,QAAQ,OAFV,UAKE,cAAC,IAAD,CACEF,GAAG,IACH5D,UAAU,oBACVe,MAAM,UAHR,kBAQA,cAAC,IAAD,CACE6C,GAAG,YACH5D,UAAU,oBACVe,MAAM,YAHR,gCAcP+B,EAGG,qBAAK9C,UAAU,WAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiH,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACE,cAAC,EAAD,CACEnE,SAAUA,EACVC,OAzEI,SAACxD,GACnBwG,EACGW,IAAInH,EAAcY,IAClBgH,IAAI5H,IAuEOyD,SApEM,SAAC7D,GACrB4G,EACGW,IAAIvH,EAAQgB,IACZiH,UAkEWnF,SAAUO,EACVS,cAnHY,SAACd,GAC3BM,EAAmBoD,EAAkBwB,QAAO,SAAC1E,GAAD,OAAaA,EAAQR,YAAcA,OAmHjED,aAjEG,SAACS,GAClBV,EACGqF,IAAI3E,IAgEOO,OArGG,WACjB0C,EAAY,YAAI9C,GACbyE,MAAK,SAACC,EAAaC,GAAd,OAA8BD,EAAY3H,KAAK6H,cAAcD,EAAY5H,eAuGvE,cAAC,IAAD,CAAOoH,KAAK,eAAZ,SACE,cAAC,EAAD,CAAYzC,aAzFP,SAACC,GAClBsB,EACGW,IAAIjC,EAAWtE,IACfgH,IAAI1C,QAyFG,cAAC,IAAD,CAAUb,GAAG,WAIjB,6CC5IK+D,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,K","file":"static/js/main.d8a7050b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD5WQwH2zEo3LOhc6knDkXg1E9KcigqIpw',\n  authDomain: 'product-app-f9343.firebaseapp.com',\n  databaseURL: 'https://product-app-f9343-default-rtdb.firebaseio.com',\n  projectId: 'product-app-f9343',\n  storageBucket: 'product-app-f9343.appspot.com',\n  messagingSenderId: '1086267291185',\n  appId: '1:1086267291185:web:b4581b738e5e349d66c710',\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions,\n} from '@material-ui/core';\n\nimport './ModalEdit.scss';\n\nexport const ModalEdit = React.memo(\n  ({\n    isOpen,\n    product,\n    edit,\n    setOpenModal,\n  }) => {\n    const [updateProduct, setUpdateProduct] = useState({ ...product });\n\n    const inputHandler = (event) => {\n      const { value, name } = event.target;\n\n      setUpdateProduct({ ...updateProduct, [name]: value });\n    };\n\n    useEffect(() => {\n      setUpdateProduct(product);\n    }, [product]);\n\n    return (\n      <Dialog\n        className=\"product__edit-form\"\n        open={isOpen}\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Product</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-name\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            value={updateProduct.name}\n            onChange={inputHandler}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-image\"\n            label=\"Image URL\"\n            type=\"text\"\n            name=\"imageUrl\"\n            value={updateProduct.imageUrl}\n            onChange={inputHandler}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-description\"\n            name=\"description\"\n            label=\"Description\"\n            value={updateProduct.description}\n            onChange={inputHandler}\n            type=\"text\"\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-count\"\n            label=\"Count of products\"\n            name=\"count\"\n            value={updateProduct.count}\n            onChange={inputHandler}\n            type=\"text\"\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-color\"\n            name=\"color\"\n            label=\"Color\"\n            value={updateProduct.color}\n            onChange={inputHandler}\n            type=\"text\"\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-width\"\n            name=\"width\"\n            label=\"Width\"\n            value={updateProduct.width}\n            onChange={inputHandler}\n            type=\"text\"\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"modal-height\"\n            name=\"height\"\n            label=\"Height\"\n            value={updateProduct.height}\n            onChange={inputHandler}\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              setUpdateProduct(updateProduct);\n              edit(updateProduct);\n              setOpenModal(false);\n            }}\n          >\n            Save\n          </Button>\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              setUpdateProduct(product);\n            }}\n          >\n            Undo\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"button\"\n            onClick={() => {\n              setOpenModal(false);\n            }}\n          >\n            X\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  },\n);\n\nModalEdit.propTypes = PropTypes.shape({\n  isOpen: PropTypes.bool.isRequired,\n  product: PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  edit: PropTypes.func.isRequired,\n  setOpenModal: PropTypes.func.isRequired,\n}).isRequired;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button,\n} from '@material-ui/core';\n\nexport const ModalDelete = React.memo(\n  ({\n    isOpen, deleteProduct, setOpenDeleteModal, product,\n  }) => {\n    const [isDelete, setDelet] = useState(false);\n\n    return (\n      <Dialog\n        className=\"product__delete\"\n        open={isOpen}\n      >\n        <DialogTitle id=\"form-delete-title\">\n          Do you really wana delete this product?\n        </DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            name=\"isBusiness\"\n          >\n            <FormControlLabel\n              value=\"true\"\n              control={<Radio />}\n              onClick={() => {\n                setDelet(true);\n              }}\n              label=\"YES\"\n            />\n            <FormControlLabel\n              value=\"false\"\n              control={<Radio />}\n              label=\"NO\"\n              onClick={() => {\n                setDelet(false);\n              }}\n            />\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            type=\"button\"\n            onClick={() => {\n              if (isDelete) {\n                deleteProduct(product);\n                setOpenDeleteModal(false);\n              } else {\n                setOpenDeleteModal(false);\n              }\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              setOpenDeleteModal(false);\n            }}\n          >\n            X\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  },\n);\n\nModalDelete.propTypes = PropTypes.shape({\n  isOpen: PropTypes.bool.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n  setOpenDeleteModal: PropTypes.func.isRequired,\n  product: PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n}).isRequired;\n","/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField,\n} from '@material-ui/core';\nimport './ModalComments.scss';\n\nexport const ModalComments = React.memo(\n  ({\n    isOpen, setOpenComments, comments, onAddComment, productId,\n  }) => {\n    const [isAddComment, isSetAddComment] = useState(false);\n\n    const [newComment, setNewComment] = useState({ description: '', productId });\n    const [visibleComments, setVisibleComments] = useState(comments);\n\n    const inputCommentHandler = (event) => {\n      const { value, name } = event.target;\n\n      setNewComment({ ...newComment, [name]: value });\n    };\n\n    useEffect(() => {\n      setVisibleComments(comments);\n    });\n\n    return (\n      <Dialog\n        className=\"product__comments\"\n        open={isOpen}\n      >\n        <DialogTitle\n          id=\"product-comments\"\n        >\n          Product Comments\n        </DialogTitle>\n\n        <DialogContent>\n          <ul>\n            {visibleComments.map((comment) => (\n              <li className=\"comments\">\n                <p>{`${comment.description} - ${comment.date}`}</p>\n              </li>\n            ))}\n\n          </ul>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              isSetAddComment(true);\n            }}\n          >\n            Add Comments\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setOpenComments(false);\n            }}\n          >\n            X\n          </Button>\n          <Dialog\n            className=\"add-new-comments\"\n            open={isAddComment}\n          >\n            <DialogTitle>Add new comment</DialogTitle>\n            <DialogContent>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"modal-name\"\n                label=\"Description\"\n                type=\"text\"\n                name=\"description\"\n                value={newComment.description}\n                onChange={inputCommentHandler}\n                fullWidth\n              />\n            </DialogContent>\n\n            <DialogActions>\n              <Button\n                type=\"submit\"\n                onClick={() => {\n                  onAddComment(newComment);\n                  isSetAddComment(false);\n                }}\n              >\n                ADD\n              </Button>\n              <Button\n                color=\"secondary\"\n                onClick={() => {\n                  isSetAddComment(false);\n                }}\n              >\n                X\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </DialogActions>\n      </Dialog>\n    );\n  },\n);\n\nModalComments.propTypes = PropTypes.shape({\n  isOpen: PropTypes.bool.isRequired,\n  setOpenComments: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    productId: PropTypes.string.isRequired,\n  }).isRequired,\n}).isRequired;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Box } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport './ProductList.scss';\nimport { ModalEdit } from '../ModalEdit';\nimport { ModalDelete } from '../ModalDelete';\nimport { ModalComments } from '../ModalComments';\n\nexport const ProductList = React.memo(\n  ({\n    products, onEdit, onDelete, comments, commentFilter, onAddComment, onSort,\n  }) => {\n    const [isOpenModal, setOpenModal] = useState(false);\n    const [currentProduct, setCurrentProduct] = useState({});\n    const [isOpenDeleteModal, setOpenDeleteModal] = useState(false);\n    const [isOpenComments, setOpenComments] = useState(false);\n\n    const setProduct = (product) => {\n      setCurrentProduct(product);\n    };\n\n    return (\n      <>\n        <Box mt={10} ml={5}>\n          <Button variant=\"contained\" color=\"secondary\">\n            <Link\n              to=\"/addProducts\"\n              className=\"product__button-add\"\n            >\n              Add new Product\n            </Link>\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            classNames=\"priduct__button-sort\"\n            onClick={() => {\n              onSort();\n            }}\n          >\n            Sort By Name\n          </Button>\n        </Box>\n\n        <Box mt={1} ml={5} display=\"flex\" flexDirection=\"column\">\n          <ul className=\"product-list\">\n            {products.map((product) => (\n              <Box key={product.id} mr={3}>\n                <li\n                  className=\"product-list__product product\"\n                  style={{ width: '500px' }}\n                >\n                  <h2\n                    className=\"product__title\"\n                  >\n                    {product.name.toUpperCase()}\n                  </h2>\n\n                  <div>\n                    <img\n                      className=\"product__photo\"\n                      alt=\"iphone 12\"\n                      src={product.imageUrl}\n                      style={{ height: '300px' }}\n                    />\n                  </div>\n\n                  <Box display=\"flex\" justifyContent=\"space-between\">\n                    <Button\n                      variant=\"contained\"\n                      type=\"button\"\n                      color=\"primary\"\n                      onClick={() => {\n                        setProduct(product);\n                        setOpenModal(true);\n                      }}\n                    >\n                      Edit\n                    </Button>\n\n                    <Button\n                      variant=\"contained\"\n                      type=\"button\"\n                      style={{ backgroundColor: '#DB4E3F', color: '#ffff' }}\n                      onClick={() => {\n                        setProduct(product);\n                        setOpenDeleteModal(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </Box>\n\n                  <p className=\"product__description\">{product.description}</p>\n\n                  <p>\n                    {`Count: ${product.count}`}\n                  </p>\n\n                  <p>\n                    {`Color: ${product.color}`}\n                  </p>\n\n                  <p>\n                    {`Size: ${product.width} x ${product.height}`}\n                  </p>\n\n                  <Button\n                    variant=\"contained\"\n                    type=\"button\"\n                    color=\"primary\"\n                    style={{ color: '#ffff', width: '100%' }}\n                    onClick={() => {\n                      commentFilter(product.id);\n                      setOpenComments(true);\n                    }}\n                  >\n                    Comments\n                  </Button>\n\n                  <ModalEdit\n                    product={currentProduct}\n                    isOpen={isOpenModal}\n                    setOpenModal={setOpenModal}\n                    edit={onEdit}\n                  />\n                  <ModalDelete\n                    isOpen={isOpenDeleteModal}\n                    deleteProduct={onDelete}\n                    setOpenDeleteModal={setOpenDeleteModal}\n                    product={currentProduct}\n                  />\n                  <ModalComments\n                    isOpen={isOpenComments}\n                    setOpenComments={setOpenComments}\n                    comments={comments}\n                    onAddComment={onAddComment}\n                    productId={product.id}\n                  />\n\n                </li>\n              </Box>\n            ))}\n          </ul>\n        </Box>\n\n      </>\n    );\n  },\n);\n\nProductList.propTypes = PropTypes.shape({\n  products: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequireds,\n    count: PropTypes.number.isRequiredm,\n    size: PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n    }),\n    weight: PropTypes.string.isRequired,\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    productId: PropTypes.string.isRequired,\n  }).isRequired,\n  commentsFilter: PropTypes.func.isRequired,\n}).isRequired;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport './NewProduct.scss';\nimport './NewProductForm.scss';\n\nexport const NewProduct = ({ onAddProduct }) => {\n  const [newProduct, setNewProduct] = useState({});\n  const [isError, setError] = useState(false);\n\n  // eslint-disable-next-line consistent-return\n  const isValidProductLink = (currentURL) => {\n    // eslint-disable-next-line\n    const isValidURL = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (isValidURL.test(currentURL)) {\n      return isValidURL;\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { value, name } = event.target;\n\n    setNewProduct({ ...newProduct, [name]: value });\n  };\n\n  const submitNewProduct = (event) => {\n    event.preventDefault();\n    if (isValidProductLink(newProduct.imageUrl)) {\n      setError(false);\n      onAddProduct(newProduct);\n      setNewProduct({\n        id: '',\n        name: '',\n        imageUrl: '',\n        description: '',\n        count: '',\n        color: '',\n        width: '',\n        height: '',\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <div className=\"new-product\">\n      <form\n        onSubmit={submitNewProduct}\n        className=\"new-product__form form\"\n      >\n        <label htmlFor=\"product-id\">\n          <input\n            id=\"product-id\"\n            className=\"form__item\"\n            name=\"id\"\n            type=\"number\"\n            placeholder=\"ID\"\n            value={newProduct.id}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-name\">\n          <input\n            id=\"product-name\"\n            className=\"form__item\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={newProduct.name}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-img\">\n          {isError && (\n          <p style={{ color: 'red' }}>Not Valid URL </p>\n          )}\n          <input\n            id=\"product-img\"\n            className={classNames('form__item', { error: isError })}\n            name=\"imageUrl\"\n            type=\"text\"\n            placeholder=\"Image URL\"\n            value={newProduct.imageUrl}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-description\">\n          <textarea\n            id=\"product-description\"\n            className=\"form__item\"\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Description\"\n            value={newProduct.description}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-count\">\n          <input\n            id=\"product-count\"\n            className=\"form__item\"\n            name=\"count\"\n            type=\"number\"\n            placeholder=\"Count of product\"\n            value={newProduct.count}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-color\">\n          <input\n            id=\"product-color\"\n            className=\"form__item\"\n            name=\"color\"\n            type=\"text\"\n            placeholder=\"Color\"\n            value={newProduct.color}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-width\">\n          <input\n            id=\"product-width\"\n            className=\"form__item\"\n            name=\"width\"\n            type=\"number\"\n            placeholder=\"Width\"\n            value={newProduct.width}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-height\">\n          <input\n            id=\"product-height\"\n            className=\"form__item\"\n            name=\"height\"\n            type=\"number\"\n            placeholder=\"Height\"\n            value={newProduct.height}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Add new product\n        </Button>\n\n      </form>\n    </div>\n  );\n};\n\nNewProduct.propTypes = PropTypes.shape({\n  onAddProduct: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './HomePage.scss';\nimport { Paper, Container, Box } from '@material-ui/core';\n\nexport const HomePage = () => (\n  <section>\n    <Paper>\n      <Container fixed>\n        <Box className=\"header__logo-title\" mt={10}>\n          Product App\n        </Box>\n      </Container>\n    </Paper>\n  </section>\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Link, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport {\n  AppBar, Container, Typography, Box, Toolbar,\n} from '@material-ui/core';\nimport firebase from './firebase';\n\nimport { ProductList } from './components/ProductList';\nimport { NewProduct } from './components/NewProduct';\nimport { HomePage } from './components/HomePage';\n\nimport './App.scss';\nimport './nav.scss';\n\nexport const App = () => {\n  const [products, setProducts] = useState([]);\n  const [commentsOfProduct, setComments] = useState([]);\n  const [visibleComments, setVisibleComments] = useState([]);\n\n  const ref = firebase.firestore().collection('products');\n  const comments = firebase.firestore().collection('comments');\n\n  const filteredByProductId = (productId) => {\n    setVisibleComments(commentsOfProduct.filter((comment) => comment.productId === productId));\n  };\n\n  const getComments = () => {\n    comments.onSnapshot((querrySnapchot) => {\n      const newComments = [];\n\n      querrySnapchot.forEach((comment) => {\n        newComments.push(comment.data());\n      });\n\n      setComments(newComments);\n    });\n  };\n\n  const sortByName = () => {\n    setProducts([...products]\n      .sort((prevElement, nextElement) => prevElement.name.localeCompare(nextElement.name)));\n  };\n\n  const getProducts = () => {\n    ref.onSnapshot((querySnapchot) => {\n      const items = [];\n\n      querySnapchot.forEach((doc) => {\n        items.push(doc.data());\n      });\n\n      setProducts(items);\n    });\n  };\n\n  const addProduct = (newProduct) => {\n    ref\n      .doc(newProduct.id)\n      .set(newProduct);\n  };\n\n  const editProduct = (updateProduct) => {\n    ref\n      .doc(updateProduct.id)\n      .set(updateProduct);\n  };\n\n  const deleteProduct = (product) => {\n    ref\n      .doc(product.id)\n      .delete();\n  };\n\n  const addComment = (comment) => {\n    comments\n      .add(comment);\n  };\n\n  useEffect(() => {\n    getComments();\n    getProducts();\n  }, []);\n\n  console.log(products);\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Container fixed>\n\n          <Toolbar className=\"header\">\n            <Typography className=\"header__logo-title\">\n              Product App\n            </Typography>\n\n            <Box\n              className=\"header__navigation navigation\"\n              display=\"flex\"\n            >\n\n              <Link\n                to=\"/\"\n                className=\"navigation__title\"\n                color=\"primary\"\n              >\n                Home\n              </Link>\n\n              <Link\n                to=\"/products\"\n                className=\"navigation__title\"\n                color=\"secondary\"\n              >\n                Products\n              </Link>\n\n            </Box>\n          </Toolbar>\n\n        </Container>\n      </AppBar>\n\n      {products\n\n        ? (\n          <div className=\"products\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <HomePage />\n              </Route>\n\n              <Route path=\"/products\">\n                <ProductList\n                  products={products}\n                  onEdit={editProduct}\n                  onDelete={deleteProduct}\n                  comments={visibleComments}\n                  commentFilter={filteredByProductId}\n                  onAddComment={addComment}\n                  onSort={sortByName}\n                />\n              </Route>\n\n              <Route path=\"/addProducts\">\n                <NewProduct onAddProduct={addProduct} />\n              </Route>\n\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        )\n        : <p>Loading</p>}\n    </>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}