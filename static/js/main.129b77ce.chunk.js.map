{"version":3,"sources":["firebase.js","components/ModalEdit/ModalEdit.jsx","components/ModalDelete/ModalDelete.jsx","components/ModalComments/ModalCommetns.jsx","components/ProductList/ProductList.jsx","components/NewProduct/NewProduct.jsx","components/HomePage/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ModalEdit","isOpen","product","edit","setOpenModal","useState","updateProduct","setUpdateProduct","inputHandler","event","target","value","name","useEffect","Dialog","className","open","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","type","onChange","fullWidth","imageUrl","description","count","color","width","height","DialogActions","Button","onClick","variant","ModalDelete","deleteProduct","setOpenDeleteModal","isDelete","setDelet","RadioGroup","FormControlLabel","control","Radio","ModalComments","setOpenComments","comments","map","comment","date","ProductList","products","onEdit","onDelete","commentFilter","isOpenModal","currentProduct","setCurrentProduct","isOpenDeleteModal","isOpenComments","setProduct","Box","mt","ml","to","display","flexDirection","mr","style","toUpperCase","alt","src","justifyContent","backgroundColor","NewProduct","onAddProduct","newProduct","setNewProduct","isError","setError","onSubmit","currentURL","preventDefault","test","htmlFor","placeholder","required","classNames","error","HomePage","Paper","Container","fixed","App","setProducts","commentsOfProduct","setComments","visibleComments","setVisibleComments","ref","firestore","collection","onSnapshot","querrySnapchot","newComments","forEach","push","data","querySnapchot","items","doc","AppBar","position","Toolbar","Typography","path","exact","set","delete","productId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.129b77ce.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD5WQwH2zEo3LOhc6knDkXg1E9KcigqIpw',\n  authDomain: 'product-app-f9343.firebaseapp.com',\n  databaseURL: 'https://product-app-f9343-default-rtdb.firebaseio.com',\n  projectId: 'product-app-f9343',\n  storageBucket: 'product-app-f9343.appspot.com',\n  messagingSenderId: '1086267291185',\n  appId: '1:1086267291185:web:b4581b738e5e349d66c710',\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions,\n} from '@material-ui/core';\n\nimport './ModalEdit.scss';\n\nexport const ModalEdit = ({\n  isOpen,\n  product,\n  edit,\n  setOpenModal,\n}) => {\n  const [updateProduct, setUpdateProduct] = useState({ ...product });\n\n  const inputHandler = (event) => {\n    const { value, name } = event.target;\n\n    setUpdateProduct({ ...updateProduct, [name]: value });\n  };\n\n  useEffect(() => {\n    setUpdateProduct(product);\n  }, [product]);\n\n  return (\n    <Dialog\n      className=\"product__edit-form\"\n      open={isOpen}\n    >\n      <DialogTitle id=\"form-dialog-title\">Edit Product</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-name\"\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={updateProduct.name}\n          onChange={inputHandler}\n          fullWidth\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-image\"\n          label=\"Image URL\"\n          type=\"text\"\n          name=\"imageUrl\"\n          value={updateProduct.imageUrl}\n          onChange={inputHandler}\n          fullWidth\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-description\"\n          name=\"description\"\n          label=\"Description\"\n          value={updateProduct.description}\n          onChange={inputHandler}\n          type=\"text\"\n          fullWidth\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-count\"\n          label=\"Count of products\"\n          name=\"count\"\n          value={updateProduct.count}\n          onChange={inputHandler}\n          type=\"text\"\n          fullWidth\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-color\"\n          name=\"color\"\n          label=\"Color\"\n          value={updateProduct.color}\n          onChange={inputHandler}\n          type=\"text\"\n          fullWidth\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-width\"\n          name=\"width\"\n          label=\"Width\"\n          value={updateProduct.width}\n          onChange={inputHandler}\n          type=\"text\"\n          fullWidth\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"modal-height\"\n          name=\"height\"\n          label=\"Height\"\n          value={updateProduct.height}\n          onChange={inputHandler}\n          type=\"text\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            setUpdateProduct(updateProduct);\n            edit(updateProduct);\n            setOpenModal(false);\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            setUpdateProduct(product);\n          }}\n        >\n          Undo\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"button\"\n          onClick={() => {\n            setOpenModal(false);\n          }}\n        >\n          X\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nModalEdit.propTypes = PropTypes.shape({\n  isOpen: PropTypes.bool.isRequired,\n  product: PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n  edit: PropTypes.func.isRequired,\n  setOpenModal: PropTypes.func.isRequired,\n}).isRequired;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button,\n} from '@material-ui/core';\n\nexport const ModalDelete = ({\n  isOpen, deleteProduct, setOpenDeleteModal, product,\n}) => {\n  const [isDelete, setDelet] = useState(false);\n\n  return (\n    <Dialog\n      className=\"product__delete\"\n      open={isOpen}\n    >\n      <DialogTitle id=\"form-delete-title\">\n        Do you really wana delete this product?\n      </DialogTitle>\n      <DialogContent>\n        <RadioGroup\n          name=\"isBusiness\"\n        >\n          <FormControlLabel\n            value=\"true\"\n            control={<Radio />}\n            onClick={() => {\n              setDelet(true);\n            }}\n            label=\"YES\"\n          />\n          <FormControlLabel\n            value=\"false\"\n            control={<Radio />}\n            label=\"NO\"\n            onClick={() => {\n              setDelet(false);\n            }}\n          />\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          type=\"button\"\n          onClick={() => {\n            if (isDelete) {\n              deleteProduct(product);\n              setOpenDeleteModal(false);\n            } else {\n              setOpenDeleteModal(false);\n            }\n          }}\n        >\n          Submit\n        </Button>\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            setOpenDeleteModal(false);\n          }}\n        >\n          X\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nModalDelete.propTypes = PropTypes.shape({\n  isOpen: PropTypes.bool.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n  setOpenDeleteModal: PropTypes.func.isRequired,\n  product: PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogTitle, DialogContent, DialogActions,\n} from '@material-ui/core';\nimport './ModalComments.scss';\n\nexport const ModalComments = ({ isOpen, setOpenComments, comments }) => (\n  <Dialog\n    className=\"product__comments\"\n    open={isOpen}\n  >\n    <DialogTitle\n      id=\"product-comments\"\n    >\n      Product Comments\n    </DialogTitle>\n\n    <DialogContent>\n      <ul>\n        {comments.map((comment) => (\n          <li className=\"comments\">\n            <p>{`${comment.description} - ${comment.date}`}</p>\n          </li>\n        ))}\n\n      </ul>\n    </DialogContent>\n\n    <DialogActions>\n      <Button\n        color=\"primary\"\n      >\n        Add Comments\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          setOpenComments(false);\n        }}\n      >\n        X\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nModalComments.propTypes = PropTypes.shape({\n  isOpen: PropTypes.bool.isRequired,\n  setOpenComments: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    productId: PropTypes.string.isRequired,\n  }).isRequired,\n}).isRequired;\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Box } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport './ProductList.scss';\nimport { ModalEdit } from '../ModalEdit';\nimport { ModalDelete } from '../ModalDelete';\nimport { ModalComments } from '../ModalComments';\n\nexport const ProductList = ({\n  products, onEdit, onDelete, comments, commentFilter,\n}) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState({});\n  const [isOpenDeleteModal, setOpenDeleteModal] = useState(false);\n  const [isOpenComments, setOpenComments] = useState(false);\n\n  const setProduct = (product) => {\n    setCurrentProduct(product);\n  };\n\n  return (\n    <>\n      <Box mt={10} ml={5}>\n        <Button variant=\"contained\" color=\"secondary\">\n          <Link\n            to=\"/addProducts\"\n            className=\"product__button-add\"\n          >\n            Add new Product\n          </Link>\n        </Button>\n      </Box>\n\n      <Box mt={1} ml={5} display=\"flex\" flexDirection=\"column\">\n        <ul className=\"product-list\">\n          {products.map((product) => (\n            <Box key={product.id} mr={3}>\n              <li\n                className=\"product-list__product product\"\n                style={{ width: '500px' }}\n              >\n                <h2\n                  className=\"product__title\"\n                >\n                  {product.name.toUpperCase()}\n                </h2>\n\n                <div>\n                  <img\n                    className=\"product__photo\"\n                    alt=\"iphone 12\"\n                    src={product.imageUrl}\n                    style={{ height: '300px' }}\n                  />\n                </div>\n\n                <Box display=\"flex\" justifyContent=\"space-between\">\n                  <Button\n                    variant=\"contained\"\n                    type=\"button\"\n                    color=\"primary\"\n                    onClick={() => {\n                      setProduct(product);\n                      setOpenModal(true);\n                    }}\n                  >\n                    Edit\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    type=\"button\"\n                    style={{ backgroundColor: '#DB4E3F', color: '#ffff' }}\n                    onClick={() => {\n                      setProduct(product);\n                      setOpenDeleteModal(true);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Box>\n\n                <p className=\"product__description\">{product.description}</p>\n\n                <p>\n                  {`Count: ${product.count}`}\n                </p>\n\n                <p>\n                  {`Color: ${product.color}`}\n                </p>\n\n                <p>\n                  {`Size: ${product.width} x ${product.height}`}\n                </p>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"button\"\n                  color=\"primary\"\n                  style={{ color: '#ffff', width: '100%' }}\n                  onClick={() => {\n                    setOpenComments(true);\n                    commentFilter(product.id);\n                  }}\n                >\n                  Comments\n                </Button>\n\n                <ModalEdit\n                  product={currentProduct}\n                  isOpen={isOpenModal}\n                  setOpenModal={setOpenModal}\n                  edit={onEdit}\n                />\n                <ModalDelete\n                  isOpen={isOpenDeleteModal}\n                  deleteProduct={onDelete}\n                  setOpenDeleteModal={setOpenDeleteModal}\n                  product={currentProduct}\n                />\n                <ModalComments\n                  isOpen={isOpenComments}\n                  setOpenComments={setOpenComments}\n                  comments={comments}\n                />\n\n              </li>\n            </Box>\n          ))}\n        </ul>\n      </Box>\n\n    </>\n  );\n};\n\nProductList.propTypes = PropTypes.shape({\n  products: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequireds,\n    count: PropTypes.number.isRequiredm,\n    size: PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n    }),\n    weight: PropTypes.string.isRequired,\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    productId: PropTypes.string.isRequired,\n  }).isRequired,\n  commentsFilter: PropTypes.func.isRequired,\n}).isRequired;\n","/* eslint-disable no-useless-return */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport './NewProduct.scss';\nimport './NewProductForm.scss';\n\nexport const NewProduct = ({ onAddProduct }) => {\n  const [newProduct, setNewProduct] = useState({});\n  const [isError, setError] = useState(false);\n\n  const isValidProductLink = (currentURL) => {\n    // eslint-disable-next-line\n    const isValidURL = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (isValidURL.test(currentURL)) {\n      setError(false);\n      onAddProduct(newProduct);\n    } else {\n      setError(true);\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { value, name } = event.target;\n\n    setNewProduct({ ...newProduct, [name]: value });\n  };\n\n  const submitNewProduct = (event) => {\n    event.preventDefault();\n    isValidProductLink(newProduct.imageUrl);\n\n    if (isError === false) {\n      setNewProduct({\n        id: '',\n        name: '',\n        imageUrl: '',\n        description: '',\n        count: '',\n        color: '',\n        width: '',\n        height: '',\n      });\n    }\n  };\n\n  return (\n    <div className=\"new-product\">\n      <form\n        onSubmit={submitNewProduct}\n        className=\"new-product__form form\"\n      >\n        <label htmlFor=\"product-id\">\n          <input\n            className=\"form__item\"\n            id=\"product-id\"\n            name=\"id\"\n            type=\"text\"\n            placeholder=\"ID\"\n            value={newProduct.id}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-name\">\n          <input\n            className=\"form__item\"\n            name=\"name\"\n            id=\"product-name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={newProduct.name}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-img\">\n          {isError && (\n          <p style={{ color: 'red' }}>Not Valid URL </p>\n          )}\n          <input\n            className={classNames('form__item', { error: isError })}\n            name=\"imageUrl\"\n            id=\"product-img\"\n            type=\"text\"\n            placeholder=\"Image URL\"\n            value={newProduct.imageUrl}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-description\">\n          <textarea\n            className=\"form__item\"\n            id=\"product-description\"\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={newProduct.description}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-count\">\n          <input\n            className=\"form__item\"\n            id=\"product-count\"\n            type=\"number\"\n            name=\"count\"\n            placeholder=\"Count of product\"\n            value={newProduct.count}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-color\">\n          <input\n            className=\"form__item\"\n            id=\"product-color\"\n            name=\"color\"\n            type=\"text\"\n            placeholder=\"Color\"\n            value={newProduct.color}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-width\">\n          <input\n            className=\"form__item\"\n            id=\"product-width\"\n            name=\"width\"\n            type=\"number\"\n            placeholder=\"Width\"\n            value={newProduct.width}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n        <label htmlFor=\"product-height\">\n          <input\n            className=\"form__item\"\n            id=\"product-height\"\n            name=\"height\"\n            type=\"number\"\n            placeholder=\"Height\"\n            value={newProduct.height}\n            onChange={inputHandler}\n            required\n          />\n        </label>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Add new product\n        </Button>\n\n      </form>\n    </div>\n  );\n};\n\nNewProduct.propTypes = PropTypes.shape({\n  onAddProduct: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './HomePage.scss';\nimport { Paper, Container, Box } from '@material-ui/core';\n\nexport const HomePage = () => (\n  <section>\n    <Paper>\n      <Container fixed>\n        <Box className=\"header__logo-title\" mt={10}>\n          Product App\n        </Box>\n      </Container>\n    </Paper>\n  </section>\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Link, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport {\n  AppBar, Container, Typography, Box, Toolbar,\n} from '@material-ui/core';\nimport firebase from './firebase';\n\nimport { ProductList } from './components/ProductList';\nimport { NewProduct } from './components/NewProduct';\nimport { HomePage } from './components/HomePage';\n\nimport './App.scss';\nimport './nav.scss';\n\nexport const App = () => {\n  const [products, setProducts] = useState([]);\n  const [commentsOfProduct, setComments] = useState([]);\n  const [visibleComments, setVisibleComments] = useState([]);\n\n  const ref = firebase.firestore().collection('products');\n  const comments = firebase.firestore().collection('comments');\n\n  const filteredByProductId = (productId) => {\n    setVisibleComments(commentsOfProduct.filter((comment) => comment.productId === productId));\n  };\n\n  const getComments = () => {\n    comments.onSnapshot((querrySnapchot) => {\n      const newComments = [];\n\n      querrySnapchot.forEach((comment) => {\n        newComments.push(comment.data());\n      });\n\n      setComments(newComments);\n    });\n  };\n\n  const getProducts = () => {\n    ref.onSnapshot((querySnapchot) => {\n      const items = [];\n\n      querySnapchot.forEach((doc) => {\n        items.push(doc.data());\n      });\n\n      setProducts(items);\n    });\n  };\n\n  const addProduct = (newProduct) => {\n    ref\n      .doc(newProduct.id)\n      .set(newProduct);\n  };\n\n  const editProduct = (updateProduct) => {\n    ref\n      .doc(updateProduct.id)\n      .set(updateProduct);\n  };\n\n  const deleteProduct = (product) => {\n    ref\n      .doc(product.id)\n      .delete();\n  };\n\n  useEffect(() => {\n    getComments();\n    getProducts();\n  }, []);\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Container fixed>\n\n          <Toolbar className=\"header\">\n            <Typography className=\"header__logo-title\">\n              Product App\n            </Typography>\n\n            <Box\n              className=\"header__navigation navigation\"\n              display=\"flex\"\n            >\n\n              <Link\n                to=\"/\"\n                className=\"navigation__title\"\n                color=\"primary\"\n              >\n                Home\n              </Link>\n\n              <Link\n                to=\"/products\"\n                className=\"navigation__title\"\n                color=\"secondary\"\n              >\n                Products\n              </Link>\n\n            </Box>\n          </Toolbar>\n\n        </Container>\n      </AppBar>\n\n      {products\n\n        ? (\n          <div className=\"products\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <HomePage />\n              </Route>\n\n              <Route path=\"/products\">\n                <ProductList\n                  products={products}\n                  onEdit={editProduct}\n                  onDelete={deleteProduct}\n                  comments={visibleComments}\n                  commentFilter={filteredByProductId}\n                />\n              </Route>\n\n              <Route path=\"/addProducts\">\n                <NewProduct onAddProduct={addProduct} />\n              </Route>\n\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        )\n        : <p>Loading</p>}\n    </>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}